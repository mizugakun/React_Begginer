part 1
. consider the following component architecture below:

                AppComponent
                      |
    ------------------+-----------------
    |                 |                |
    A                 B                C
                      |                |
                      D                E
                                       |
                                       F

. Assume that we need to show username in components A, D, and F. Such information is store in the AppComponent.
. To do that, we can simply pass the username as props from AppComponent down to A, D, and F.
. However, it is unnecessary to pass the props through the intermediate component B, C, and E.
. What would be nice if there is a way to send the data directly to the required component.

. "Context" provides a way to pass data through the component tree without having to pass props manually at every level.


part 2
Steps for using context:
      1. Create context
            . Function: const context = React.createContext()
            . Define "Provider" and "Consumer" component after creating the context: context.Provider & context.Consumer
            . export Provider and Consumer
      2. Provide a context value
            . Only the components which have ancestor-descendant relationship can use Privider and Consumer
            . Wrap the intermediate component with Provider in the top level
            . Provider component is responsible for providing value for all descendant components
            . Use "value" attribute in HTML tag to pass the value
      3. Consume the context value in the necessary component
            . Add Consumer component in the desired component
            . We need to specify a function between the tags of Consumer component
            . The function will take context value as parameter which can be use within the function and return as React element

